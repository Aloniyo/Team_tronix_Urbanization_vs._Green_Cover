# Project Documentation: Urban Growth and Its Impact on Green Cover

---

## **Overview**

This project analyzes how urban growth factors, such as population density and built-up area, impact green cover percentages in major cities. Using machine learning and data visualization techniques, we explore relationships between variables, build predictive models, and identify trends over time.

---

## **Objective**

1. Analyze the correlation between urban growth metrics and green cover percentage.
2. Build a machine learning model to predict green cover based on urban growth indicators.
3. Visualize temporal trends in urban growth and green cover changes.

---

## **Key Components**

### 1. **Data Preprocessing**
- **Input Dataset:** `data.csv`
- Handle missing values by filling them with the mean of their respective numeric columns.
- Ensure all variables used in the model are numeric and free of missing data.

### 2. **Feature Selection**
- **Features (X):** `population_density`, `built_up_area`
- **Target Variable (y):** `green_cover_percentage`

### 3. **Model Building**
- Use `RandomForestRegressor` to predict green cover percentage.
- Evaluate the model using:
  - Mean Squared Error (MSE)
  - R-squared (RÂ²)
  - Mean Absolute Error (MAE)
- Perform 5-fold cross-validation for reliable metrics.

### 4. **Visualizations**
- Scatter plots for variable relationships.
- Heatmaps for correlations.
- Feature importance bar charts.
- Temporal trend analysis.

---

## **Code Execution**

### Required Libraries
Ensure the following Python libraries are installed:
```bash
pip install pandas numpy matplotlib seaborn scikit-learn
```

### Running the Code
1. Place the dataset `data.csv` in the working directory.
2. Run the Python script provided.
3. The script performs data preprocessing, builds a predictive model, and generates visualizations.

---

## **Outputs**

### 1. **Model Evaluation**
- Metrics:
  - Mean Squared Error: e.g., 3.45
  - R-squared: e.g., 0.82
  - Mean Absolute Error: e.g., 1.73
- Cross-validated Mean Squared Error: e.g., 3.58

### 2. **Plots**
The following plots are saved as image files in the working directory:
- **OUTPUT_01.png**: Actual vs Predicted Green Cover Percentage  
- **OUTPUT_02.png**: Population Density vs Green Cover Percentage  
- **OUTPUT_03.png**: Correlation Heatmap  
- **OUTPUT_04.png**: Feature Importance from Random Forest  
- **OUTPUT_05.png**: Pairplot of Variables  
- **OUTPUT_06.png**: Temporal Trends (Population, Urban Area, Green Cover)

---

## **Code Breakdown**

### **1. Data Preprocessing**
- Load the dataset and fill missing values:
```python
data[numeric_cols] = data[numeric_cols].fillna(data[numeric_cols].mean())
```
- Verify if all missing values are handled:
```python
if data.isnull().sum().any():
    print("Warning: There are still missing values after filling with mean.")
```

### **2. Feature Selection**
- Select urban growth features (`population_density`, `built_up_area`) and the target variable (`green_cover_percentage`).

### **3. Model Training**
- Split the dataset into training and testing sets:
```python
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
```
- Train the Random Forest Regressor:
```python
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)
```

### **4. Visualizations**
- **Scatter Plots:** Compare predictions to actual values.
- **Correlation Heatmaps:** Explore relationships between variables.
- **Feature Importance:** Display the importance of each feature using a bar chart.
- **Temporal Trends:** Plot time-series data for population, urban area, and green cover.

---

## **Generated Visualizations**

### 1. **Actual vs Predicted Green Cover**
Compares predicted green cover percentages to actual values to assess model performance.

### 2. **Population Density vs Green Cover Percentage**
Examines the relationship between urban growth and green cover.

### 3. **Correlation Heatmap**
Displays correlations among `population_density`, `built_up_area`, and `green_cover_percentage`.

### 4. **Feature Importance**
Highlights the significance of urban growth features in predicting green cover.

### 5. **Temporal Trends**
- Tracks trends over time for:
  - Total population
  - Urban population growth
  - Urban area expansion
  - Green cover area changes
  - Green cover percentage

---

## **Future Enhancements**
1. Use more advanced machine learning models, such as Gradient Boosting or Neural Networks.
2. Analyze the impact of additional features, such as economic growth or policies.
3. Apply the model to predict future trends in urban growth and green cover.

